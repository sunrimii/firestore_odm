name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # 代碼質量檢查
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: 🔧 Setup Melos
        run: dart pub global activate melos

      - name: 📦 Bootstrap Dependencies
        run: melos bootstrap

      - name: 🎨 Check Code Formatting
        run: melos run format:check --no-select

      - name: 🔍 Analyze Code
        run: melos run analyze --no-select

      - name: 📋 Validate Publishing
        run: melos run publish:dry-run --no-select

  # 測試矩陣
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        flutter-version: [stable, beta]
      fail-fast: false

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}

      - name: 🔧 Setup Melos
        run: dart pub global activate melos

      - name: 📦 Bootstrap Dependencies
        run: melos bootstrap

      - name: 🧪 Run Unit Tests
        run: melos run test:unit --no-select

      - name: 🔬 Run Integration Tests
        run: melos run test:integration --no-select

  # 代碼覆蓋率
  coverage:
    runs-on: ubuntu-latest
    needs: [quality, test]
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: 🔧 Setup Melos
        run: dart pub global activate melos

      - name: 📦 Bootstrap Dependencies
        run: melos bootstrap

      - name: 📊 Generate Coverage
        run: |
          melos run test:unit --no-select
          # Merge coverage from all packages
          dart pub global activate coverage
          format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.packages --report-on=lib

      - name: 📤 Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # 性能測試
  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [quality]
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: 🔧 Setup Melos
        run: dart pub global activate melos

      - name: 📦 Bootstrap Dependencies
        run: melos bootstrap

      - name: ⚡ Performance Benchmarks
        run: |
          cd flutter_example
          flutter test test/ --dart-define=PERFORMANCE_TEST=true

  # 依賴安全掃描
  security:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: 🔧 Setup Melos
        run: dart pub global activate melos

      - name: 📦 Bootstrap Dependencies
        run: melos bootstrap

      - name: 🔒 Security Audit
        run: |
          # 檢查過時的依賴
          melos run deps:outdated --no-select || true
          
          # 檢查已知的安全漏洞
          dart pub global activate pana
          melos exec -- "dart pub global run pana --no-warning ."

  # 文檔生成測試
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: 🔧 Setup Melos
        run: dart pub global activate melos

      - name: 📦 Bootstrap Dependencies
        run: melos bootstrap

      - name: 📖 Generate Documentation
        run: |
          melos exec --scope="firestore_odm*" -- "dart doc --validate-links"

  # CI結果匯總
  ci-success:
    runs-on: ubuntu-latest
    needs: [quality, test, coverage, security, docs]
    if: always()
    steps:
      - name: 📊 CI Results Summary
        run: |
          echo "## 🎯 CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.quality.result }}" == "success" ]]; then
            echo "✅ **Code Quality**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Code Quality**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ **Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.coverage.result }}" == "success" ]]; then
            echo "✅ **Coverage**: Generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Coverage**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.security.result }}" == "success" ]]; then
            echo "✅ **Security**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Security**: Issues Found" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.docs.result }}" == "success" ]]; then
            echo "✅ **Documentation**: Generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Documentation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Repository**: https://github.com/sylphxltd/firestore_odm" >> $GITHUB_STEP_SUMMARY

      - name: ❌ Fail if any job failed
        if: ${{ needs.quality.result != 'success' || needs.test.result != 'success' || needs.security.result != 'success' || needs.docs.result != 'success' }}
        run: exit 1

      - name: ✅ All CI Checks Passed
        run: |
          echo "🎉 All CI checks passed successfully!"
          echo "Ready for merge or release! 🚀"